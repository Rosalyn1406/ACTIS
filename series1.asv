load R1.mat
x= R1.xT0
y= R1.yR1

%log scale x axis
logx=log10(x)

%% Curve Fit
% polyval:evaluate polynomial at some point x
% polyint:integrate polynomial
% polyder:derivative of polynomial
% roots: return roots of a polynomial
% conv: multiply two polynomial
% deconv: divide two polynomial
% polyfit: least-squares polynomial curve fit

%fitting to eight degree
% coefficeint
p1=polyfit(logx,y,8)

% Fitting
x_fit=linspace(-2,4);
y_fit = polyval(p1,x_fit);

%% plotting
figure(1)
plot(logx,y,'bo')
hold on;
plot(x_fit,y_fit,'r')
hold off;
ylim([-0.2 1.2]) 
xlim([-1.9 3.5])
grid on
title("R vs [T]_0 for K_d=50pM, L_0/K_d=0.0167")
xlabel("[T]_{0}/K_{d}")
ylabel("R_{1}")
yline(0.5,"-.m","R_2=0.5")
legend("data","fit(8th degree)")

%% Derivation
deri=polyder(p1)

% Checking value of y when x is 2.0
x1=[0.00796]
y1=polyval(p1,x1) % value is correct 

% slope, x value of y =0.5 is input into derivation
x_point=[0.00796]
y_p1_slope=polyval(deri,x_point)

%% Roots
p=[-0.0007    0.0035    0.0055   -0.0397   -0.0115    0.1810    0.0054   -0.5579 0.0018];
r=roots(p)

% sub x value into
